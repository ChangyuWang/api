{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "version": "v1alpha1"
  },
  "components": {
    "schemas": {
      "istio.core.v1alpha1.Port": {
        "description": "Port describes the properties of a specific port of a service.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Label assigned to the port.",
            "type": "string",
            "format": "string"
          },
          "number": {
            "description": "REQUIRED: A valid non-negative integer port number.",
            "type": "integer"
          },
          "protocol": {
            "description": "REQUIRED: The protocol exposed on the port. MUST BE one of HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP|TLS. TLS implies the connection will be routed based on the SNI header to the destination without terminating the TLS connection.",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.core.v1alpha1.Selector": {
        "type": "object",
        "required": [
          "labels"
        ],
        "properties": {
          "labels": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "string"
            }
          }
        }
      },
      "istio.core.v1alpha1.Workload": {
        "description": "Configuration for a Workload.",
        "type": "object",
        "properties": {
          "select": {
            "$ref": "#/components/schemas/istio.core.v1alpha1.Selector"
          },
          "network": {
            "$ref": "#/components/schemas/istio.core.v1alpha1.Network"
          },
          "telemetry": {
            "$ref": "#/components/schemas/istio.core.v1alpha1.Telemetry"
          },
          "security": {
            "$ref": "#/components/schemas/istio.core.v1alpha1.Security"
          }
        }
      },
      "istio.core.v1alpha1.Network": {
        "description": "Network configuration for a Workload.",
        "type": "object",
        "properties": {
          "ingress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.core.v1alpha1.Ingress"
            }
          },
          "egress": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.core.v1alpha1.Egress"
            }
          }
        }
      },
      "istio.core.v1alpha1.Telemetry": {
        "description": "Telemetry configuration for a Workload.",
        "type": "object"
      },
      "istio.core.v1alpha1.Security": {
        "description": "Security configuration for a Workload.",
        "type": "object"
      },
      "istio.core.v1alpha1.Ingress": {
        "type": "object",
        "properties": {
          "port": {
            "$ref": "#/components/schemas/istio.core.v1alpha1.Port"
          },
          "bind": {
            "description": "The ip to which the listener should be bound. Must be in the format `x.x.x.x`. Unix domain socket addresses are not allowed in the bind field for ingress listeners. If omitted, Istio will automatically configure the defaults based on imported services and the workload instances to which this configuration is applied to.",
            "type": "string",
            "format": "string"
          },
          "captureMode": {
            "$ref": "#/components/schemas/istio.core.v1alpha1.CaptureMode"
          },
          "defaultEndpoint": {
            "description": "REQUIRED: The loopback IP endpoint or Unix domain socket to which traffic should be forwarded to. This configuration can be used to redirect traffic arriving at the bind IP:Port on the sidecar to a localhost:port or Unix domain socket where the application workload instance is listening for connections. Format should be 127.0.0.1:PORT or `unix:///path/to/socket`",
            "type": "string",
            "format": "string"
          }
        }
      },
      "istio.core.v1alpha1.Egress": {
        "type": "object",
        "properties": {
          "port": {
            "$ref": "#/components/schemas/istio.core.v1alpha1.Port"
          },
          "bind": {
            "description": "The ip or the Unix domain socket to which the listener should be bound to. Port MUST be specified if bind is not empty. Format: `x.x.x.x` or `unix:///path/to/uds` or `unix://@foobar` (Linux abstract namespace). If omitted, Istio will automatically configure the defaults based on imported services, the workload instances to which this configuration is applied to and the captureMode. If captureMode is NONE, bind will default to 127.0.0.1.",
            "type": "string",
            "format": "string"
          },
          "captureMode": {
            "$ref": "#/components/schemas/istio.core.v1alpha1.CaptureMode"
          },
          "hosts": {
            "description": "REQUIRED: One or more service hosts exposed by the listener.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/istio.core.v1alpha1.Egress.HostSelector"
            }
          }
        }
      },
      "istio.core.v1alpha1.CaptureMode": {
        "description": "CaptureMode describes how traffic to a listener is expected to be captured. Applicable only when the listener is bound to an IP.",
        "type": "string",
        "enum": [
          "DEFAULT",
          "IPTABLES",
          "NONE"
        ],
        "default": "DEFAULT"
      },
      "istio.core.v1alpha1.Egress.HostSelector": {
        "description": "OZNOTE: Why do we need a selector? Host should be good enough here? Is it for Access control, or for pruning of config?",
        "type": "object",
        "properties": {
          "namespace": {
            "description": "namespace from which the service is imported from. can be '*', '.', '~' to indicate any, local or no namespace respectively.",
            "type": "string",
            "format": "string"
          },
          "host": {
            "description": "host name. Can be prefix (i.e. '*' or '*.foo.example.com'.",
            "type": "string",
            "format": "string"
          }
        }
      }
    }
  }
}